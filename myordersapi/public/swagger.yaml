openapi: 3.0.3
info:
  title: Order API
  description: Simple Order API with JWT Auth
  version: "1.0.0"

servers:
  - url: http://localhost:8000

tags:
  - name: Auth
    description: Authentication & registration
  - name: Orders
    description: Order CRUD and workflow

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OrderLine:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
          example: 125.50
        productName:
          type: string
          example: "Buitenreclamebord 2x3m"
        pickedDate:
          type: string
          format: date-time
          nullable: true
          example: "2024-03-20T14:30:00+00:00"
        currency:
          type: string

    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: "Ontwerp goedkeuren"
        description:
          type: string
          example: "Wachten op klantgoedkeuring voor het ontwerp van het reclamebord"
        executionDate:
          type: string
          format: date-time
          nullable: true
          example: "2024-03-21T10:00:00+00:00"
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: "Buitenreclame voor Bakkerij Jansen"
        orderNumber:
          type: integer
          example: 2024031501
        orderDate:
          type: string
          format: date-time
          example: "2024-03-15T09:30:00+00:00"
        status:
          type: string
          example: "processing"
        currency:
          type: string
          readOnly: true
          example: "EUR"
        total:
          type: number
          readOnly: true
          example: 125.50
        orderLines:
          type: array
          items:
            $ref: "#/components/schemas/OrderLine"
          example:
            - amount: 125.50
              productName: "Buitenreclamebord 2x3m"
              pickedDate: null
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
          example:
            - name: "Ontwerp goedkeuren"
              description: "Wachten op klantgoedkeuring voor het ontwerp van het reclamebord"
              executionDate: "2024-03-21T10:00:00+00:00"
            - name: "Productie starten"
              description: "Start productie na ontwerpgoedkeuring"
              executionDate: "2024-03-22T08:00:00+00:00"

security:
  - bearerAuth: []

paths:
  /register:
    post:
      tags: [Auth]
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: test123
      responses:
        "201":
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        "400":
          description: Missing data
        "409":
          description: User already exists

  /api/login_check:
    post:
      tags: [Auth]
      summary: Login user (get JWT token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: test123
      responses:
        "200":
          description: JWT Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Invalid credentials

  /api/orders:
    post:
      tags: [Orders]
      summary: Create an order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                [name, orderNumber, orderDate, status, currency, orderLines]
              properties:
                name:
                  type: string
                  example: "Buitenreclame voor Bakkerij Jansen"
                orderNumber:
                  type: integer
                  example: 2024031501
                orderDate:
                  type: string
                  format: date-time
                  example: "2024-03-15T09:30:00+00:00"
                status:
                  type: string
                  example: "pending"
                currency:
                  type: string
                  example: "EUR"
                orderLines:
                  type: array
                  items:
                    $ref: "#/components/schemas/OrderLine"
                  example:
                    - amount: 125.50
                      productName: "Buitenreclamebord 2x3m"
                      pickedDate: null
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

    get:
      tags: [Orders]
      summary: List all orders for user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"

  /api/orders/{id}:
    get:
      tags: [Orders]
      summary: Get order by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Not found

    put:
      tags: [Orders]
      summary: Update order by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

    delete:
      tags: [Orders]
      summary: Delete order by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deleted

  /api/orders/{id}/status:
    patch:
      tags: [Orders]
      summary: Update order status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

  /api/orders/{id}/tasks:
    post:
      tags: [Orders]
      summary: Link tasks to order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tasks]
              properties:
                tasks:
                  type: array
                  items:
                    $ref: "#/components/schemas/Task"
                  example:
                    - name: "Ontwerp goedkeuren"
                      description: "Wachten op klantgoedkeuring voor het ontwerp van het reclamebord"
                      executionDate: "2024-03-21T10:00:00+00:00"
                    - name: "Productie starten"
                      description: "Start productie na ontwerpgoedkeuring"
                      executionDate: "2024-03-22T08:00:00+00:00"
      responses:
        "200":
          description: Tasks linked
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

  /api/orders/{orderId}/tasks/{taskId}:
    put:
      tags: [Orders]
      summary: Update a specific task on an order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                executionDate:
                  type: string
                  format: date-time
                  nullable: true
      responses:
        "200":
          description: Task updated, returns full order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Not found

    delete:
      tags: [Orders]
      summary: Delete a specific task on an order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Task deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        "404":
          description: Not found
